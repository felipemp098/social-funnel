-- =============================================================================
-- CORRE√á√ÉO URGENTE: POL√çTICAS RLS DA TABELA APP_USERS
-- Problema: Query travando no fetchAppUser
-- =============================================================================

-- EXECUTE IMEDIATAMENTE NO SUPABASE DASHBOARD - SQL EDITOR

-- -----------------------------------------------------------------------------
-- 1. VERIFICAR PROBLEMA ATUAL
-- -----------------------------------------------------------------------------
SELECT 'Verificando pol√≠ticas atuais...' as status;

SELECT 
  policyname, 
  cmd, 
  qual as using_clause
FROM pg_policies 
WHERE tablename = 'app_users';

-- -----------------------------------------------------------------------------
-- 2. REMOVER TODAS AS POL√çTICAS PROBLEM√ÅTICAS
-- -----------------------------------------------------------------------------
DROP POLICY IF EXISTS "app_users_select" ON public.app_users;
DROP POLICY IF EXISTS "app_users_insert_admin" ON public.app_users;
DROP POLICY IF EXISTS "app_users_insert_manager" ON public.app_users;
DROP POLICY IF EXISTS "app_users_update_self" ON public.app_users;
DROP POLICY IF EXISTS "app_users_update_admin" ON public.app_users;
DROP POLICY IF EXISTS "app_users_delete_admin" ON public.app_users;

-- Remover outras poss√≠veis pol√≠ticas
DROP POLICY IF EXISTS "Users can view own app_user" ON public.app_users;
DROP POLICY IF EXISTS "Admins can view all app_users" ON public.app_users;
DROP POLICY IF EXISTS "Managers can view hierarchy app_users" ON public.app_users;

SELECT 'Pol√≠ticas antigas removidas' as status;

-- -----------------------------------------------------------------------------
-- 3. CRIAR POL√çTICAS SIMPLES E FUNCIONAIS
-- -----------------------------------------------------------------------------

-- Policy 1: SELECT - Acesso b√°sico
CREATE POLICY "app_users_select_policy" 
  ON public.app_users 
  FOR SELECT 
  USING (
    -- Usu√°rio pode ver pr√≥prios dados
    auth.uid() = id 
    OR 
    -- Admin pode ver todos
    (
      EXISTS (
        SELECT 1 FROM public.app_users au 
        WHERE au.id = auth.uid() 
        AND au.role = 'admin'
      )
    )
    OR
    -- Manager pode ver usu√°rios criados por ele
    (
      EXISTS (
        SELECT 1 FROM public.app_users au 
        WHERE au.id = auth.uid() 
        AND au.role = 'manager'
      )
      AND created_by = auth.uid()
    )
  );

-- Policy 2: INSERT - Cria√ß√£o de usu√°rios
CREATE POLICY "app_users_insert_policy" 
  ON public.app_users 
  FOR INSERT 
  WITH CHECK (
    -- Admin pode criar qualquer usu√°rio
    EXISTS (
      SELECT 1 FROM public.app_users au 
      WHERE au.id = auth.uid() 
      AND au.role = 'admin'
    )
    OR
    -- Manager pode criar apenas users
    (
      EXISTS (
        SELECT 1 FROM public.app_users au 
        WHERE au.id = auth.uid() 
        AND au.role = 'manager'
      )
      AND role = 'user'
      AND created_by = auth.uid()
    )
  );

-- Policy 3: UPDATE - Atualiza√ß√£o
CREATE POLICY "app_users_update_policy" 
  ON public.app_users 
  FOR UPDATE 
  USING (
    -- Admin pode atualizar qualquer
    EXISTS (
      SELECT 1 FROM public.app_users au 
      WHERE au.id = auth.uid() 
      AND au.role = 'admin'
    )
    OR
    -- Manager pode atualizar usu√°rios criados por ele
    (
      EXISTS (
        SELECT 1 FROM public.app_users au 
        WHERE au.id = auth.uid() 
        AND au.role = 'manager'
      )
      AND created_by = auth.uid()
    )
  )
  WITH CHECK (
    -- Mesmas regras para o check
    EXISTS (
      SELECT 1 FROM public.app_users au 
      WHERE au.id = auth.uid() 
      AND au.role = 'admin'
    )
    OR
    (
      EXISTS (
        SELECT 1 FROM public.app_users au 
        WHERE au.id = auth.uid() 
        AND au.role = 'manager'
      )
      AND created_by = auth.uid()
    )
  );

-- Policy 4: DELETE - Apenas admins
CREATE POLICY "app_users_delete_policy" 
  ON public.app_users 
  FOR DELETE 
  USING (
    EXISTS (
      SELECT 1 FROM public.app_users au 
      WHERE au.id = auth.uid() 
      AND au.role = 'admin'
    )
  );

SELECT 'Pol√≠ticas corrigidas criadas!' as status;

-- -----------------------------------------------------------------------------
-- 4. TESTE IMEDIATO
-- -----------------------------------------------------------------------------
-- Testar se consegue acessar pr√≥prios dados
SELECT 
  '‚úÖ TESTE: Acesso pr√≥prio funcionando' as resultado,
  id, 
  email, 
  role 
FROM public.app_users 
WHERE id = auth.uid()
LIMIT 1;

-- -----------------------------------------------------------------------------
-- 5. VERIFICAR SE RESOLVEU
-- -----------------------------------------------------------------------------
SELECT 
  'üéâ CORRE√á√ÉO APLICADA! Teste o carregamento da aplica√ß√£o agora.' as resultado;

-- Instru√ß√µes finais
SELECT 
  'üìã PR√ìXIMOS PASSOS:' as instrucoes
UNION ALL
SELECT '1. Atualize a p√°gina da aplica√ß√£o (F5)'
UNION ALL  
SELECT '2. Verifique se n√£o trava mais em loading'
UNION ALL
SELECT '3. Olhe o console para ver se aparecem os logs de sucesso';
